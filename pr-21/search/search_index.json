{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Autoware Documentation # Warning Under Construction About Autoware # Autoware is the world\u2019s leading open-source software project for autonomous driving. Autoware is built on Robot Operating System (ROS) and enables commercial deployment of autonomous driving in a broad range of vehicles and applications. Please see here for more details. Getting started # Installation Tutorials How-to guides Design Contributing Help","title":"Introduction"},{"location":"#autoware-documentation","text":"Warning Under Construction","title":"Autoware Documentation"},{"location":"#about-autoware","text":"Autoware is the world\u2019s leading open-source software project for autonomous driving. Autoware is built on Robot Operating System (ROS) and enables commercial deployment of autonomous driving in a broad range of vehicles and applications. Please see here for more details.","title":"About Autoware"},{"location":"#getting-started","text":"Installation Tutorials How-to guides Design Contributing Help","title":"Getting started"},{"location":"contributing/","text":"Contributing # Warning Under Construction Contribution workflows # Issues # Discussions # Small pull requests # Large pull requests #","title":"Contributing"},{"location":"contributing/#contributing","text":"Warning Under Construction","title":"Contributing"},{"location":"contributing/#contribution-workflows","text":"","title":"Contribution workflows"},{"location":"contributing/#issues","text":"","title":"Issues"},{"location":"contributing/#discussions","text":"","title":"Discussions"},{"location":"contributing/#small-pull-requests","text":"","title":"Small pull requests"},{"location":"contributing/#large-pull-requests","text":"","title":"Large pull requests"},{"location":"contributing/coding-guidelines/","text":"Coding guidelines # Warning Under Construction Common guidelines #","title":"Coding guidelines"},{"location":"contributing/coding-guidelines/#coding-guidelines","text":"Warning Under Construction","title":"Coding guidelines"},{"location":"contributing/coding-guidelines/#common-guidelines","text":"","title":"Common guidelines"},{"location":"contributing/coding-guidelines/languages/","text":"Language-specific coding guidelines # Warning Under Construction","title":"Language-specific coding guidelines"},{"location":"contributing/coding-guidelines/languages/#language-specific-coding-guidelines","text":"Warning Under Construction","title":"Language-specific coding guidelines"},{"location":"contributing/coding-guidelines/languages/cmake/","text":"CMake # Warning Under Construction","title":"CMake"},{"location":"contributing/coding-guidelines/languages/cmake/#cmake","text":"Warning Under Construction","title":"CMake"},{"location":"contributing/coding-guidelines/languages/cpp/","text":"C++ # Warning Under Construction","title":"C++"},{"location":"contributing/coding-guidelines/languages/cpp/#c","text":"Warning Under Construction","title":"C++"},{"location":"contributing/coding-guidelines/languages/docker/","text":"Docker # Warning Under Construction","title":"Docker"},{"location":"contributing/coding-guidelines/languages/docker/#docker","text":"Warning Under Construction","title":"Docker"},{"location":"contributing/coding-guidelines/languages/github-actions/","text":"GitHub Actions # Warning Under Construction","title":"GitHub Actions"},{"location":"contributing/coding-guidelines/languages/github-actions/#github-actions","text":"Warning Under Construction","title":"GitHub Actions"},{"location":"contributing/coding-guidelines/languages/markdown/","text":"Markdown # Warning Under Construction","title":"Markdown"},{"location":"contributing/coding-guidelines/languages/markdown/#markdown","text":"Warning Under Construction","title":"Markdown"},{"location":"contributing/coding-guidelines/languages/package-xml/","text":"package.xml # Warning Under Construction","title":"package.xml"},{"location":"contributing/coding-guidelines/languages/package-xml/#packagexml","text":"Warning Under Construction","title":"package.xml"},{"location":"contributing/coding-guidelines/languages/python/","text":"Python # Warning Under Construction","title":"Python"},{"location":"contributing/coding-guidelines/languages/python/#python","text":"Warning Under Construction","title":"Python"},{"location":"contributing/coding-guidelines/languages/ros2-interfaces/","text":"ROS 2 interfaces # Warning Under Construction","title":"ROS 2 interfaces"},{"location":"contributing/coding-guidelines/languages/ros2-interfaces/#ros-2-interfaces","text":"Warning Under Construction","title":"ROS 2 interfaces"},{"location":"contributing/coding-guidelines/languages/shell-scripts/","text":"Shell scripts # Warning Under Construction","title":"Shell scripts"},{"location":"contributing/coding-guidelines/languages/shell-scripts/#shell-scripts","text":"Warning Under Construction","title":"Shell scripts"},{"location":"contributing/coding-guidelines/ros-nodes/","text":"ROS nodes coding guidelines # Warning Under Construction","title":"ROS nodes coding guidelines"},{"location":"contributing/coding-guidelines/ros-nodes/#ros-nodes-coding-guidelines","text":"Warning Under Construction","title":"ROS nodes coding guidelines"},{"location":"contributing/coding-guidelines/ros-nodes/class-design/","text":"Class design # Warning Under Construction","title":"Class design"},{"location":"contributing/coding-guidelines/ros-nodes/class-design/#class-design","text":"Warning Under Construction","title":"Class design"},{"location":"contributing/coding-guidelines/ros-nodes/console-logging/","text":"Console logging # Warning Under Construction","title":"Console logging"},{"location":"contributing/coding-guidelines/ros-nodes/console-logging/#console-logging","text":"Warning Under Construction","title":"Console logging"},{"location":"contributing/coding-guidelines/ros-nodes/coordinate-system/","text":"Coordinate system # Warning Under Construction","title":"Coordinate system"},{"location":"contributing/coding-guidelines/ros-nodes/coordinate-system/#coordinate-system","text":"Warning Under Construction","title":"Coordinate system"},{"location":"contributing/coding-guidelines/ros-nodes/directory-structure/","text":"Directory structure # Warning Under Construction","title":"Directory structure"},{"location":"contributing/coding-guidelines/ros-nodes/directory-structure/#directory-structure","text":"Warning Under Construction","title":"Directory structure"},{"location":"contributing/coding-guidelines/ros-nodes/launch-files/","text":"Launch files # Warning Under Construction","title":"Launch files"},{"location":"contributing/coding-guidelines/ros-nodes/launch-files/#launch-files","text":"Warning Under Construction","title":"Launch files"},{"location":"contributing/coding-guidelines/ros-nodes/naming/","text":"Topic namespaces # Warning Under Construction","title":"Topic namespaces"},{"location":"contributing/coding-guidelines/ros-nodes/naming/#topic-namespaces","text":"Warning Under Construction","title":"Topic namespaces"},{"location":"contributing/coding-guidelines/ros-nodes/parameters/","text":"Parameters # Warning Under Construction","title":"Parameters"},{"location":"contributing/coding-guidelines/ros-nodes/parameters/#parameters","text":"Warning Under Construction","title":"Parameters"},{"location":"contributing/coding-guidelines/ros-nodes/task-scheduling/","text":"Task scheduling # Warning Under Construction","title":"Task scheduling"},{"location":"contributing/coding-guidelines/ros-nodes/task-scheduling/#task-scheduling","text":"Warning Under Construction","title":"Task scheduling"},{"location":"contributing/coding-guidelines/ros-nodes/topic-namespaces/","text":"Topic namespaces # Warning Under Construction","title":"Topic namespaces"},{"location":"contributing/coding-guidelines/ros-nodes/topic-namespaces/#topic-namespaces","text":"Warning Under Construction","title":"Topic namespaces"},{"location":"contributing/discussion-guidelines/","text":"Discussion guidelines # Warning Under Construction","title":"Discussion guidelines"},{"location":"contributing/discussion-guidelines/#discussion-guidelines","text":"Warning Under Construction","title":"Discussion guidelines"},{"location":"contributing/documentation-guidelines/","text":"Documentation guidelines # Warning Under Construction","title":"Documentation guidelines"},{"location":"contributing/documentation-guidelines/#documentation-guidelines","text":"Warning Under Construction","title":"Documentation guidelines"},{"location":"contributing/pull-request-guidelines/","text":"Pull request guidelines # Warning Under Construction","title":"Pull request guidelines"},{"location":"contributing/pull-request-guidelines/#pull-request-guidelines","text":"Warning Under Construction","title":"Pull request guidelines"},{"location":"contributing/testing-guidelines/","text":"Testing guidelines # Warning Under Construction","title":"Testing guidelines"},{"location":"contributing/testing-guidelines/#testing-guidelines","text":"Warning Under Construction","title":"Testing guidelines"},{"location":"design/","text":"Introduction # Autoware is the world\u2019s first open-source software for autonomous driving systems. The value of Autoware is two-fold. The technology developers of autonomous driving systems can create new components based on Autoware. The service operators of autonomous driving systems, on the other hand, can select appropriate technology components with Autoware. This is enabled by the microautonomy architecture that modularizes its software stack into the core and universe subsystems (modules). Note that a module and a component are orthogonal to each other. In general, a module is a unit of functions that can be loaded and unloaded, while a component is a unit of functions that is a part of the system. So the module can be developed using multiple components and the component can be developed using multiple modules. The core module contains basic runtimes and technology components that satisfy the basic functionality and capability of sensing, computing, and actuation required for autonomous driving systems. The universe modules are extensions to the core module that can be provided by the technology developers to enhance the functionality and capability of sensing, computing, and actuation. In general, AWF develops and maintains the core module with their architects and leading members through their working groups. Note that AWF may also provide their own universe module through their projects. A key feature of the microautonomy architecture is that the universe modules can be contributed to by any organization and individual. That is, you can even create your universe and make it available for the Autoware community and ecosystem. AWF is responsible for quality control of the universe modules through their development process. As a result, there are multiple types of the universe modules - some are verified and validated by AWF and others are not. It is up to the users of Autoware which universe modules are selected and integrated to build their end applications. The interface design is the most essential piece of the microautonomy architecture, which is classified into internal and external interfaces. The Component Interface is designed for the technology components in a universe module to communicate with those in other modules, including the core module, within Autoware internally. The AD API, on the other hand, is designed for the applications of Autoware to access the technology components in the core and universe modules of Autoware externally. Designing solid interfaces, the microautonomy architecture is made possible with our partners, and at the same time is made feasible for our partners. A grand challenge of the microautonomy architecture is to achieve real-time capability, which guarantees all the technology components activated in the system to predictably meet timing constraints (given deadlines). In general, it is difficult, if not impossible, to tightly estimate the worst-case execution times (WCETs) of components. In addition, it is also difficult, if not impossible, to tightly estimate the end-to-end latency of components connected by a DAG. Autonomous driving systems based on the microautonomy architecture, therefore, must be designed to be fail-safe but not never-fail. We accept that the timing constraints may be violated (the given deadlines may be missed) as far as the overrun is taken into account. The overrun handlers are two-fold: (i) platform-defined and (ii) user-defined. The platform-defined handler is implemented as part of the platform by default, while the user-defined handler can overwrite it or add a new handler to the system. This is what we call \u201cfail-safe\u201d on a timely basis. Requirements and Roadmap Goals: All open-source. Use case driven. Real-time (predictable) framework with overrun handling. Code quality. Non-goals: Accuracy of components Architecture # Core and Universe. Autoware provides the runtimes and technology components by open-source software. The runtimes are based on the Robot Operating System (ROS). The technology components are provided by contributors, which include, but are not limited to: Sensing Camera Component LiDAR Component RADAR Component GNSS Component Computing Localization Component Perception Component Planning Component Control Component Logging Component System Monitoring Component Actuation DBW Component Tools Simulator Component Mapping Component Remote Component ML Component Annotation Component Calibration Component Concern, Assumption, and Limitation # The downside of the microautonomy architecture is that the computational performance of end applications is sacrificed due to its data path overhead attributed to functional modularity. In other words, the trade-off characteristic of the microautonomy architecture exists between computational performance and functional modularity. This trade-off problem can be solved technically by introducing real-time capability. This is because autonomous driving systems are not really designed to be real-fast, that is, low-latency computing is nice-to-have but not must-have. The must-have feature for autonomous driving systems is that the latency of computing is predictable, that is, the systems are real-time. As a whole, we can compromise computational performance to an extent that is predictable enough to meet the given timing constraints of autonomous driving systems, often referred to as deadlines of computation. Design # Warning Under Construction Component interfaces # AD API # Configuration management # Conclusion #","title":"Introduction"},{"location":"design/#introduction","text":"Autoware is the world\u2019s first open-source software for autonomous driving systems. The value of Autoware is two-fold. The technology developers of autonomous driving systems can create new components based on Autoware. The service operators of autonomous driving systems, on the other hand, can select appropriate technology components with Autoware. This is enabled by the microautonomy architecture that modularizes its software stack into the core and universe subsystems (modules). Note that a module and a component are orthogonal to each other. In general, a module is a unit of functions that can be loaded and unloaded, while a component is a unit of functions that is a part of the system. So the module can be developed using multiple components and the component can be developed using multiple modules. The core module contains basic runtimes and technology components that satisfy the basic functionality and capability of sensing, computing, and actuation required for autonomous driving systems. The universe modules are extensions to the core module that can be provided by the technology developers to enhance the functionality and capability of sensing, computing, and actuation. In general, AWF develops and maintains the core module with their architects and leading members through their working groups. Note that AWF may also provide their own universe module through their projects. A key feature of the microautonomy architecture is that the universe modules can be contributed to by any organization and individual. That is, you can even create your universe and make it available for the Autoware community and ecosystem. AWF is responsible for quality control of the universe modules through their development process. As a result, there are multiple types of the universe modules - some are verified and validated by AWF and others are not. It is up to the users of Autoware which universe modules are selected and integrated to build their end applications. The interface design is the most essential piece of the microautonomy architecture, which is classified into internal and external interfaces. The Component Interface is designed for the technology components in a universe module to communicate with those in other modules, including the core module, within Autoware internally. The AD API, on the other hand, is designed for the applications of Autoware to access the technology components in the core and universe modules of Autoware externally. Designing solid interfaces, the microautonomy architecture is made possible with our partners, and at the same time is made feasible for our partners. A grand challenge of the microautonomy architecture is to achieve real-time capability, which guarantees all the technology components activated in the system to predictably meet timing constraints (given deadlines). In general, it is difficult, if not impossible, to tightly estimate the worst-case execution times (WCETs) of components. In addition, it is also difficult, if not impossible, to tightly estimate the end-to-end latency of components connected by a DAG. Autonomous driving systems based on the microautonomy architecture, therefore, must be designed to be fail-safe but not never-fail. We accept that the timing constraints may be violated (the given deadlines may be missed) as far as the overrun is taken into account. The overrun handlers are two-fold: (i) platform-defined and (ii) user-defined. The platform-defined handler is implemented as part of the platform by default, while the user-defined handler can overwrite it or add a new handler to the system. This is what we call \u201cfail-safe\u201d on a timely basis. Requirements and Roadmap Goals: All open-source. Use case driven. Real-time (predictable) framework with overrun handling. Code quality. Non-goals: Accuracy of components","title":"Introduction"},{"location":"design/#architecture","text":"Core and Universe. Autoware provides the runtimes and technology components by open-source software. The runtimes are based on the Robot Operating System (ROS). The technology components are provided by contributors, which include, but are not limited to: Sensing Camera Component LiDAR Component RADAR Component GNSS Component Computing Localization Component Perception Component Planning Component Control Component Logging Component System Monitoring Component Actuation DBW Component Tools Simulator Component Mapping Component Remote Component ML Component Annotation Component Calibration Component","title":"Architecture"},{"location":"design/#concern-assumption-and-limitation","text":"The downside of the microautonomy architecture is that the computational performance of end applications is sacrificed due to its data path overhead attributed to functional modularity. In other words, the trade-off characteristic of the microautonomy architecture exists between computational performance and functional modularity. This trade-off problem can be solved technically by introducing real-time capability. This is because autonomous driving systems are not really designed to be real-fast, that is, low-latency computing is nice-to-have but not must-have. The must-have feature for autonomous driving systems is that the latency of computing is predictable, that is, the systems are real-time. As a whole, we can compromise computational performance to an extent that is predictable enough to meet the given timing constraints of autonomous driving systems, often referred to as deadlines of computation.","title":"Concern, Assumption, and Limitation"},{"location":"design/#design","text":"Warning Under Construction","title":"Design"},{"location":"design/#component-interfaces","text":"","title":"Component interfaces"},{"location":"design/#ad-api","text":"","title":"AD API"},{"location":"design/#configuration-management","text":"","title":"Configuration management"},{"location":"design/#conclusion","text":"","title":"Conclusion"},{"location":"design/ad-api/","text":"AD API # Warning Under Construction","title":"AD API"},{"location":"design/ad-api/#ad-api","text":"Warning Under Construction","title":"AD API"},{"location":"design/component-interfaces/","text":"Component interfaces # Warning Under Construction","title":"Component interfaces"},{"location":"design/component-interfaces/#component-interfaces","text":"Warning Under Construction","title":"Component interfaces"},{"location":"design/configuration-management/","text":"Configuration management # Warning Under Construction","title":"Configuration management"},{"location":"design/configuration-management/#configuration-management","text":"Warning Under Construction","title":"Configuration management"},{"location":"design/configuration-management/development-process/","text":"Development process # Warning Under Construction","title":"Development process"},{"location":"design/configuration-management/development-process/#development-process","text":"Warning Under Construction","title":"Development process"},{"location":"design/configuration-management/release-process/","text":"Release process # Warning Under Construction","title":"Release process"},{"location":"design/configuration-management/release-process/#release-process","text":"Warning Under Construction","title":"Release process"},{"location":"design/configuration-management/repository-structure/","text":"Repository structure # Warning Under Construction","title":"Repository structure"},{"location":"design/configuration-management/repository-structure/#repository-structure","text":"Warning Under Construction","title":"Repository structure"},{"location":"help/","text":"Help # Warning Under Construction","title":"Help"},{"location":"help/#help","text":"Warning Under Construction","title":"Help"},{"location":"help/docs-guide/","text":"Docs guide # Warning Under Construction This page explains documentations sites that are useful for Autoware and ROS development. The Autoware Foundation # Autoware Documentation (this site) # Autoware Universe Documentation # ROS Docs Guide #","title":"Docs guide"},{"location":"help/docs-guide/#docs-guide","text":"Warning Under Construction This page explains documentations sites that are useful for Autoware and ROS development.","title":"Docs guide"},{"location":"help/docs-guide/#the-autoware-foundation","text":"","title":"The Autoware Foundation"},{"location":"help/docs-guide/#autoware-documentation-this-site","text":"","title":"Autoware Documentation (this site)"},{"location":"help/docs-guide/#autoware-universe-documentation","text":"","title":"Autoware Universe Documentation"},{"location":"help/docs-guide/#ros-docs-guide","text":"","title":"ROS Docs Guide"},{"location":"help/support-guidelines/","text":"Support guidelines # Warning Under Construction","title":"Support guidelines"},{"location":"help/support-guidelines/#support-guidelines","text":"Warning Under Construction","title":"Support guidelines"},{"location":"how-to-guides/","text":"How-to guides # Warning Under Construction Write an Autoware package Add a message Debug Autoware Integrate Autoware with a real vehicle etc.","title":"How-to guides"},{"location":"how-to-guides/#how-to-guides","text":"Warning Under Construction Write an Autoware package Add a message Debug Autoware Integrate Autoware with a real vehicle etc.","title":"How-to guides"},{"location":"installation/","text":"Installation # Warning Under Construction Supported platforms #","title":"Installation"},{"location":"installation/#installation","text":"Warning Under Construction","title":"Installation"},{"location":"installation/#supported-platforms","text":"","title":"Supported platforms"},{"location":"installation/autoware/","text":"Installation of Autoware # Warning Under Construction","title":"Installation of Autoware"},{"location":"installation/autoware/#installation-of-autoware","text":"Warning Under Construction","title":"Installation of Autoware"},{"location":"installation/autoware/docker-installation/","text":"Docker installation # Warning Under Construction","title":"Docker installation"},{"location":"installation/autoware/docker-installation/#docker-installation","text":"Warning Under Construction","title":"Docker installation"},{"location":"installation/autoware/local-installation/","text":"Local installation # Warning Under Construction","title":"Local installation"},{"location":"installation/autoware/local-installation/#local-installation","text":"Warning Under Construction","title":"Local installation"},{"location":"installation/tools-for-developers/","text":"Installation of tools for developers # Warning Under Construction","title":"Installation of tools for developers"},{"location":"installation/tools-for-developers/#installation-of-tools-for-developers","text":"Warning Under Construction","title":"Installation of tools for developers"},{"location":"installation/tools-for-users/","text":"Installation of tools for users # Warning Under Construction","title":"Installation of tools for users"},{"location":"installation/tools-for-users/#installation-of-tools-for-users","text":"Warning Under Construction","title":"Installation of tools for users"},{"location":"tutorials/","text":"Tutorials # Warning Under Construction Simulation methods # Local simulation # Scenario simulation # Simulation types # Closed-loop # Open-loop # E2E #","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"Warning Under Construction","title":"Tutorials"},{"location":"tutorials/#simulation-methods","text":"","title":"Simulation methods"},{"location":"tutorials/#local-simulation","text":"","title":"Local simulation"},{"location":"tutorials/#scenario-simulation","text":"","title":"Scenario simulation"},{"location":"tutorials/#simulation-types","text":"","title":"Simulation types"},{"location":"tutorials/#closed-loop","text":"","title":"Closed-loop"},{"location":"tutorials/#open-loop","text":"","title":"Open-loop"},{"location":"tutorials/#e2e","text":"","title":"E2E"},{"location":"tutorials/local-simulation/","text":"Local simulation # Warning Under Construction","title":"Local simulation"},{"location":"tutorials/local-simulation/#local-simulation","text":"Warning Under Construction","title":"Local simulation"},{"location":"tutorials/local-simulation/closed-loop-simulation/","text":"Closed-loop simulation # Warning Under Construction","title":"Closed-loop simulation"},{"location":"tutorials/local-simulation/closed-loop-simulation/#closed-loop-simulation","text":"Warning Under Construction","title":"Closed-loop simulation"},{"location":"tutorials/local-simulation/e2e-simulation/","text":"E2E simulation # Warning Under Construction","title":"E2E simulation"},{"location":"tutorials/local-simulation/e2e-simulation/#e2e-simulation","text":"Warning Under Construction","title":"E2E simulation"},{"location":"tutorials/local-simulation/open-loop-simulation/","text":"Open loop simulation # Warning Under Construction","title":"Open loop simulation"},{"location":"tutorials/local-simulation/open-loop-simulation/#open-loop-simulation","text":"Warning Under Construction","title":"Open loop simulation"},{"location":"tutorials/scenario-simulation/","text":"Scenario simulation # Warning Under Construction","title":"Scenario simulation"},{"location":"tutorials/scenario-simulation/#scenario-simulation","text":"Warning Under Construction","title":"Scenario simulation"},{"location":"tutorials/scenario-simulation/closed-loop-simulation/","text":"Closed loop simulation # Warning Under Construction","title":"Closed loop simulation"},{"location":"tutorials/scenario-simulation/closed-loop-simulation/#closed-loop-simulation","text":"Warning Under Construction","title":"Closed loop simulation"},{"location":"tutorials/scenario-simulation/e2e-simulation/","text":"E2E simulation # Warning Under Construction","title":"E2E simulation"},{"location":"tutorials/scenario-simulation/e2e-simulation/#e2e-simulation","text":"Warning Under Construction","title":"E2E simulation"},{"location":"tutorials/scenario-simulation/open-loop-simulation/","text":"Open loop simulation # Warning Under Construction","title":"Open loop simulation"},{"location":"tutorials/scenario-simulation/open-loop-simulation/#open-loop-simulation","text":"Warning Under Construction","title":"Open loop simulation"}]}